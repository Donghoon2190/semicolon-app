{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\FinalProject\\\\semicolon-app\\\\screens\\\\photo\\\\UploadPhoto.js\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  color: white;\\n  font-weight: 600;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n  padding: 10px;\\n  border-radius: 4px;\\n  align-items: center;\\n  justify-content: center;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 10px;\\n  border: 0px solid \", \";\\n  border-bottom-width: 1px;\\n  padding-bottom: 10px;\\n  width: \", \";\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  justify-content: flex-start;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding: 20px;\\n  flex-direction: row;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation upload($caption: String!, $files: [String!]!, $location: String) {\\n    upload(caption: $caption, files: $files, location: $location) {\\n      id\\n      caption\\n      location\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styled from \"styled-components/native\";\nimport useInput from \"../../hooks/useInput\";\nimport styles from \"../../styles\";\nimport constants from \"../../constants\";\nimport AuthButton from \"../../components/AuthButton\";\nimport axios from \"axios\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { FEED_QUERY } from \"../tabs/Home\";\nimport { ME } from \"../../screens/tabs/Profile\";\nvar UPLOAD = gql(_templateObject());\nvar View = styled.View(_templateObject2());\nvar Container = styled.View(_templateObject3());\nvar Form = styled.View(_templateObject4());\nvar STextInput = styled.TextInput(_templateObject5(), styles.lightGreyColor, constants.width - 180);\nvar Button = styled.TouchableOpacity(_templateObject6(), function (props) {\n  return props.theme.blueColor;\n});\nvar Text = styled.Text(_templateObject7());\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var photo = navigation.getParam(\"photo\");\n  var captionInput = useInput(\"\");\n  var locationInput = useInput(\"\");\n\n  var _useMutation = useMutation(UPLOAD, {\n    refetchQueries: function refetchQueries() {\n      return [{\n        query: FEED_QUERY\n      }, {\n        query: ME\n      }];\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      uploadMutation = _useMutation2[0];\n\n  var handleSubmit = function handleSubmit() {\n    var formData, name, _await$axios$post, location, _await$uploadMutation, upload;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (captionInput.value === \"\" || locationInput.value === \"\") {\n              Alert.alert(\"All fields are required\");\n            }\n\n            formData = new FormData();\n            name = photo.filename;\n            formData.append(\"file\", {\n              name: name,\n              type: \"image/jpeg\",\n              uri: photo.uri\n            });\n            _context.prev = 4;\n            setIsLoading(true);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(axios.post(\"http://192.168.219.105:4040/api/upload\", formData, {\n              headers: {\n                \"content-type\": \"multipart/form-data\"\n              }\n            }));\n\n          case 8:\n            _await$axios$post = _context.sent;\n            location = _await$axios$post.data.location;\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(uploadMutation({\n              variables: {\n                files: [location],\n                caption: captionInput.value,\n                location: locationInput.value\n              }\n            }));\n\n          case 12:\n            _await$uploadMutation = _context.sent;\n            upload = _await$uploadMutation.data.upload;\n\n            if (upload.id) {\n              navigation.navigate(\"TabNavigation\");\n            }\n\n            _context.next = 21;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(_context.t0);\n            Alert.alert(\"Cant upload\", \"Try later\");\n\n          case 21:\n            _context.prev = 21;\n            setIsLoading(false);\n            return _context.finish(21);\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 17, 21, 24]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: photo.uri\n    },\n    style: {\n      height: 80,\n      width: 80,\n      marginRight: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, React.createElement(STextInput, {\n    onChangeText: captionInput.onChange,\n    value: captionInput.value,\n    placeholder: \"Caption\",\n    multiline: true,\n    placeholderTextColor: styles.darkGreyColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), React.createElement(STextInput, {\n    onChangeText: locationInput.onChange,\n    value: locationInput.value,\n    placeholder: \"Location\",\n    multiline: true,\n    placeholderTextColor: styles.darkGreyColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    onPress: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, loading ? React.createElement(ActivityIndicator, {\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Upload \")))));\n});","map":{"version":3,"sources":["D:/FinalProject/semicolon-app/screens/photo/UploadPhoto.js"],"names":["React","useState","styled","useInput","styles","constants","AuthButton","axios","gql","useMutation","FEED_QUERY","ME","UPLOAD","View","Container","Form","STextInput","TextInput","lightGreyColor","width","Button","TouchableOpacity","props","theme","blueColor","Text","navigation","loading","setIsLoading","photo","getParam","captionInput","locationInput","refetchQueries","query","uploadMutation","handleSubmit","value","Alert","alert","formData","FormData","name","filename","append","type","uri","post","headers","location","data","variables","files","caption","upload","id","navigate","console","log","height","marginRight","onChange","darkGreyColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Image, ActivityIndicator, Alert } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport styles from \"../../styles\";\r\nimport constants from \"../../constants\";\r\nimport AuthButton from \"../../components/AuthButton\";\r\nimport axios from \"axios\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { FEED_QUERY } from \"../tabs/Home\";\r\nimport { ME } from \"../../screens/tabs/Profile\";\r\n\r\nconst UPLOAD = gql`\r\n  mutation upload($caption: String!, $files: [String!]!, $location: String) {\r\n    upload(caption: $caption, files: $files, location: $location) {\r\n      id\r\n      caption\r\n      location\r\n    }\r\n  }\r\n`;\r\n\r\nconst View = styled.View`\r\n  flex: 1;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  padding: 20px;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Form = styled.View`\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst STextInput = styled.TextInput`\r\n  margin-bottom: 10px;\r\n  border: 0px solid ${styles.lightGreyColor};\r\n  border-bottom-width: 1px;\r\n  padding-bottom: 10px;\r\n  width: ${constants.width - 180};\r\n`;\r\n\r\nconst Button = styled.TouchableOpacity`\r\n  background-color: ${props => props.theme.blueColor};\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default ({ navigation }) => {\r\n  const [loading, setIsLoading] = useState(false);\r\n  const photo = navigation.getParam(\"photo\")\r\n  const captionInput = useInput(\"\");\r\n  const locationInput = useInput(\"\");\r\n  const [uploadMutation] = useMutation(UPLOAD, {\r\n    refetchQueries: () => [{ query: FEED_QUERY }, { query: ME }]\r\n  })\r\n\r\n  const handleSubmit = async () => {\r\n    if (captionInput.value === \"\" || locationInput.value === \"\") {\r\n      Alert.alert(\"All fields are required\");\r\n    }\r\n    const formData = new FormData();\r\n    const name = photo.filename;\r\n    formData.append(\"file\", {\r\n      name,\r\n      type: \"image/jpeg\",\r\n      uri: photo.uri\r\n    });\r\n    try {\r\n      setIsLoading(true)\r\n      const {\r\n        data: { location }\r\n      } = await axios.post(\"http://192.168.219.105:4040/api/upload\", formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\"\r\n        }\r\n      });\r\n      const {\r\n        data: { upload }\r\n      } = await uploadMutation({\r\n        variables: {\r\n          files: [location],\r\n          caption: captionInput.value,\r\n          location: locationInput.value,\r\n        }\r\n      })\r\n      if (upload.id) {\r\n        navigation.navigate(\"TabNavigation\")\r\n      }\r\n\r\n    } catch (e) {\r\n      console.log(e)\r\n      Alert.alert(\"Cant upload\", \"Try later\");\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <View>\r\n      <Container>\r\n        <Image\r\n          source={{ uri: photo.uri }}\r\n          style={{ height: 80, width: 80, marginRight: 30 }}\r\n        />\r\n        <Form>\r\n          <STextInput\r\n            onChangeText={captionInput.onChange}\r\n            value={captionInput.value}\r\n            placeholder=\"Caption\"\r\n            multiline={true}\r\n            placeholderTextColor={styles.darkGreyColor}\r\n          />\r\n          <STextInput\r\n            onChangeText={locationInput.onChange}\r\n            value={locationInput.value}\r\n            placeholder=\"Location\"\r\n            multiline={true}\r\n            placeholderTextColor={styles.darkGreyColor}\r\n          />\r\n          <Button onPress={handleSubmit}>\r\n            {loading ? (\r\n              <ActivityIndicator color=\"white\" />\r\n            ) : (\r\n                <Text>Upload </Text>\r\n              )}\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    </View>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}