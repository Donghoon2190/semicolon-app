{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\FinalProject\\\\semicolon-app\\\\components\\\\Post.js\";\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  opacity: 0.5;\\n  font-size: 13px;\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin: 5px 0px;\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding: 10px;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-right: 10px;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  margin-bottom: 5px;\\n  margin-top : -55px;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  font-size: 12px;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  font-weight: 500;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-left: 10px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding: 15px;\\n  flex-direction: row;\\n  align-items: center;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 15px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation toggelLike($postId: String!) {\\n    toggleLike(postId: $postId)\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport styled from \"styled-components/native\";\nimport { AntDesign, FontAwesome } from \"@expo/vector-icons\";\nimport PropTypes from \"prop-types\";\nimport Swiper from \"react-native-swiper\";\nimport { gql } from \"apollo-boost\";\nimport constants from \"../constants\";\nimport styles from \"../styles\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { withNavigation } from \"react-navigation\";\nimport Popup from \"../screens/Popup\";\nexport var TOGGLE_LIKE = gql(_templateObject());\nvar Container = styled.View(_templateObject2());\nvar Header = styled.View(_templateObject3());\nvar Touchable = styled.TouchableOpacity(_templateObject4());\nvar HeaderUserContainer = styled.View(_templateObject5());\nvar Bold = styled.Text(_templateObject6());\nvar Location = styled.Text(_templateObject7());\nvar IconsContainer = styled.View(_templateObject8());\nvar IconContainer = styled.View(_templateObject9());\nvar InfoContainer = styled.View(_templateObject10());\nvar Caption = styled.Text(_templateObject11());\nvar CommentCount = styled.Text(_templateObject12());\n\nvar Post = function Post(_ref) {\n  var id = _ref.id,\n      user = _ref.user,\n      location = _ref.location,\n      _ref$files = _ref.files,\n      files = _ref$files === void 0 ? [] : _ref$files,\n      likeCountProp = _ref.likeCount,\n      caption = _ref.caption,\n      _ref$comments = _ref.comments,\n      comments = _ref$comments === void 0 ? [] : _ref$comments,\n      isLikedProp = _ref.isLiked,\n      navigation = _ref.navigation;\n\n  var _useState = useState(isLikedProp),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLiked = _useState2[0],\n      setIsLiked = _useState2[1];\n\n  var _useState3 = useState(likeCountProp),\n      _useState4 = _slicedToArray(_useState3, 2),\n      likeCount = _useState4[0],\n      setLikeCount = _useState4[1];\n\n  var _useState5 = useState(caption),\n      _useState6 = _slicedToArray(_useState5, 2),\n      copyCaption = _useState6[0],\n      setCopyCaption = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      commentsList = _useState8[0],\n      setCommentsList = _useState8[1];\n\n  var _useMutation = useMutation(TOGGLE_LIKE, {\n    variables: {\n      postId: id\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      toggleLikeMutaton = _useMutation2[0];\n\n  var handleLike = function handleLike() {\n    return _regeneratorRuntime.async(function handleLike$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (isLiked === true) {\n              setLikeCount(function (l) {\n                return l - 1;\n              });\n            } else {\n              setLikeCount(function (l) {\n                return l + 1;\n              });\n            }\n\n            setIsLiked(function (p) {\n              return !p;\n            });\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(toggleLikeMutaton());\n\n          case 5:\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 7]], Promise);\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(Touchable, {\n    onPress: function onPress() {\n      return navigation.navigate(\"UserDetail\", {\n        username: user.username\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 40,\n      width: 40,\n      borderRadius: 20\n    },\n    source: {\n      uri: user.avatar\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  })), React.createElement(Touchable, {\n    onPress: function onPress() {\n      return navigation.navigate(\"UserDetail\", {\n        username: user.username\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, React.createElement(HeaderUserContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, React.createElement(Bold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, user.username), React.createElement(Location, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, location))), user.isSelf ? React.createElement(Popup, {\n    id: id,\n    copyCaption: copyCaption,\n    setCopyCaption: setCopyCaption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 32\n    }\n  }) : null), React.createElement(Swiper, {\n    style: {\n      height: constants.height / 2.1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, commentsList ? files.map(function (file) {\n    return React.createElement(Image, {\n      style: {\n        width: constants.width,\n        height: constants.height / 2.5\n      },\n      key: file.id,\n      source: {\n        uri: file.url\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    });\n  }) : dd), React.createElement(InfoContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, React.createElement(IconsContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, React.createElement(Touchable, {\n    onPress: handleLike,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, React.createElement(IconContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, React.createElement(AntDesign, {\n    size: 24,\n    color: isLiked ? styles.starColor : styles.blackColor,\n    name: Platform.OS === \"ios\" ? isLiked ? \"star\" : \"staro\" : isLiked ? \"star\" : \"staro\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }))), React.createElement(Touchable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, React.createElement(IconContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, React.createElement(FontAwesome, {\n    color: styles.blackColor,\n    size: 24,\n    name: Platform.OS === \"ios\" ? \"comment-o\" : \"comment-o\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  })))), React.createElement(Touchable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, React.createElement(Bold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, likeCount === 1 ? \"1 like\" : likeCount + \" likes\")), React.createElement(Caption, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, React.createElement(Bold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, user.username), \" \", copyCaption), React.createElement(Touchable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, React.createElement(CommentCount, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, \"See all \", comments.length, \" comments\"))));\n};\n\nPost.propTypes = {\n  id: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    username: PropTypes.string.isRequired\n  }).isRequired,\n  files: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n  })).isRequired,\n  likeCount: PropTypes.number.isRequired,\n  isLiked: PropTypes.bool.isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    user: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      username: PropTypes.string.isRequired\n    }).isRequired\n  })).isRequired,\n  caption: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  createdAt: PropTypes.string.isRequired\n};\nexport default withNavigation(Post);","map":{"version":3,"sources":["D:/FinalProject/semicolon-app/components/Post.js"],"names":["React","useState","styled","AntDesign","FontAwesome","PropTypes","Swiper","gql","constants","styles","useMutation","withNavigation","Popup","TOGGLE_LIKE","Container","View","Header","Touchable","TouchableOpacity","HeaderUserContainer","Bold","Text","Location","IconsContainer","IconContainer","InfoContainer","Caption","CommentCount","Post","id","user","location","files","likeCountProp","likeCount","caption","comments","isLikedProp","isLiked","navigation","setIsLiked","setLikeCount","copyCaption","setCopyCaption","commentsList","setCommentsList","variables","postId","toggleLikeMutaton","handleLike","l","p","navigate","username","height","width","borderRadius","uri","avatar","isSelf","map","file","url","dd","starColor","blackColor","Platform","OS","length","propTypes","string","isRequired","shape","arrayOf","number","bool","text","createdAt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Image, Platform } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { AntDesign, FontAwesome } from \"@expo/vector-icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport Swiper from \"react-native-swiper\";\r\nimport { gql } from \"apollo-boost\";\r\nimport constants from \"../constants\";\r\nimport styles from \"../styles\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { withNavigation } from \"react-navigation\";\r\nimport Popup from \"../screens/Popup\";\r\nexport const TOGGLE_LIKE = gql`\r\n  mutation toggelLike($postId: String!) {\r\n    toggleLike(postId: $postId)\r\n  }\r\n`;\r\n\r\nconst Container = styled.View`\r\n  margin-bottom: 15px;\r\n`;\r\nconst Header = styled.View`\r\n  padding: 15px;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\nconst Touchable = styled.TouchableOpacity``;\r\nconst HeaderUserContainer = styled.View`\r\n  margin-left: 10px;\r\n`;\r\nconst Bold = styled.Text`\r\n  font-weight: 500;\r\n`;\r\nconst Location = styled.Text`\r\n  font-size: 12px;\r\n`;\r\nconst IconsContainer = styled.View`\r\n  flex-direction: row;\r\n  margin-bottom: 5px;\r\n  margin-top : -55px;\r\n`;\r\nconst IconContainer = styled.View`\r\n  margin-right: 10px;\r\n`;\r\nconst InfoContainer = styled.View`\r\n  padding: 10px;\r\n`;\r\nconst Caption = styled.Text`\r\n  margin: 5px 0px;\r\n`;\r\nconst CommentCount = styled.Text`\r\n  opacity: 0.5;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst Post = ({\r\n    id,\r\n    user,\r\n    location,\r\n    files = [],\r\n    likeCount: likeCountProp,\r\n    caption,\r\n    comments = [],\r\n    isLiked: isLikedProp,\r\n    navigation\r\n}) => {\r\n    const [isLiked, setIsLiked] = useState(isLikedProp);\r\n    const [likeCount, setLikeCount] = useState(likeCountProp);\r\n    const [copyCaption, setCopyCaption] = useState(caption)\r\n    const [commentsList, setCommentsList] = useState(true);\r\n\r\n    const [toggleLikeMutaton] = useMutation(TOGGLE_LIKE, {\r\n        variables: {\r\n            postId: id\r\n        }\r\n    });\r\n    const handleLike = async () => {\r\n        if (isLiked === true) {\r\n            setLikeCount(l => l - 1);\r\n        } else {\r\n            setLikeCount(l => l + 1);\r\n        }\r\n        setIsLiked(p => !p);\r\n        try {\r\n            await toggleLikeMutaton();\r\n        } catch (e) { }\r\n    };\r\n    return (\r\n        <Container>\r\n            <Header>\r\n\r\n                <Touchable onPress={() => (\r\n                    navigation.navigate(\"UserDetail\", { username: user.username })\r\n                )}>\r\n                    <Image\r\n                        style={{ height: 40, width: 40, borderRadius: 20 }}\r\n                        source={{ uri: user.avatar }}\r\n                    />\r\n                </Touchable>\r\n                <Touchable onPress={() => (\r\n                    navigation.navigate(\"UserDetail\", { username: user.username })\r\n                )}>\r\n                    <HeaderUserContainer>\r\n                        <Bold>{user.username}</Bold>\r\n                        <Location>{location}</Location>\r\n                    </HeaderUserContainer>\r\n                </Touchable>\r\n                {user.isSelf ? <Popup id={id} copyCaption={copyCaption} setCopyCaption={setCopyCaption} /> : null}\r\n            </Header>\r\n            <Swiper style={{ height: constants.height / 2.1 }}>\r\n                {commentsList ?\r\n                    (\r\n                        files.map(file => (\r\n                            <Image\r\n                                style={{ width: constants.width, height: constants.height / 2.5 }}\r\n                                key={file.id}\r\n                                source={{ uri: file.url }}\r\n                            />\r\n                        ))\r\n                    ) : (dd)\r\n\r\n                }\r\n\r\n            </Swiper>\r\n\r\n            <InfoContainer>\r\n\r\n                <IconsContainer>\r\n                    <Touchable onPress={handleLike}>\r\n                        <IconContainer>\r\n                            <AntDesign\r\n                                size={24}\r\n                                color={isLiked ? styles.starColor : styles.blackColor}\r\n                                name={\r\n                                    Platform.OS === \"ios\"\r\n                                        ? isLiked\r\n                                            ? \"star\"\r\n                                            : \"staro\"\r\n                                        : isLiked\r\n                                            ? \"star\"\r\n                                            : \"staro\"\r\n                                }\r\n                            />\r\n                        </IconContainer>\r\n                    </Touchable>\r\n                    <Touchable>\r\n                        <IconContainer>\r\n                            <FontAwesome\r\n                                color={styles.blackColor}\r\n                                size={24}\r\n                                name={Platform.OS === \"ios\" ? \"comment-o\" : \"comment-o\"}\r\n                            />\r\n                        </IconContainer>\r\n                    </Touchable>\r\n                </IconsContainer>\r\n                <Touchable>\r\n                    <Bold>{likeCount === 1 ? \"1 like\" : `${likeCount} likes`}</Bold>\r\n                </Touchable>\r\n                <Caption>\r\n                    <Bold>{user.username}</Bold> {copyCaption}\r\n                </Caption>\r\n                <Touchable>\r\n                    <CommentCount>See all {comments.length} comments</CommentCount>\r\n                </Touchable>\r\n            </InfoContainer>\r\n        </Container>\r\n\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    user: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        avatar: PropTypes.string,\r\n        username: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    files: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            url: PropTypes.string.isRequired\r\n        })\r\n    ).isRequired,\r\n    likeCount: PropTypes.number.isRequired,\r\n    isLiked: PropTypes.bool.isRequired,\r\n    comments: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            text: PropTypes.string.isRequired,\r\n            user: PropTypes.shape({\r\n                id: PropTypes.string.isRequired,\r\n                username: PropTypes.string.isRequired\r\n            }).isRequired\r\n        })\r\n    ).isRequired,\r\n    caption: PropTypes.string.isRequired,\r\n    location: PropTypes.string,\r\n    createdAt: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withNavigation(Post);"]},"metadata":{},"sourceType":"module"}