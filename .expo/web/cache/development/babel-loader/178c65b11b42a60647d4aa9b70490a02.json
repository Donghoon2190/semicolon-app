{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\FinalProject\\\\semicolon-app\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { Asset } from \"expo-asset\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { persistCache } from \"apollo-cache-persist\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport options from \"./apollo\";\nimport { ThemeProvider } from \"styled-components\";\nimport styles from \"./styles\";\nimport NavController from \"./components/NavController\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      client = _useState4[0],\n      setClient = _useState4[1];\n\n  var preLoad = function preLoad() {\n    var cache, _client, _isLoggedIn;\n\n    return _regeneratorRuntime.async(function preLoad$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread({}, AntDesign.font)));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Asset.loadAsync([require(\"./assets/logo.png\")]));\n\n          case 5:\n            cache = new InMemoryCache();\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(persistCache({\n              cache: cache,\n              storage: AsyncStorage\n            }));\n\n          case 8:\n            _client = new ApolloClient(_objectSpread({\n              cache: cache\n            }, options));\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"isLoggedIn\"));\n\n          case 11:\n            _isLoggedIn = _context.sent;\n\n            if (_isLoggedIn === null || _isLoggedIn === \"false\") {\n              setIsLoggedIn(false);\n            } else {\n              setIsLoggedIn(true);\n            }\n\n            setLoaded(true);\n            setClient(_client);\n            _context.next = 20;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n\n  useEffect(function () {\n    preLoad();\n  }, []);\n\n  var logUserIn = function logUserIn() {\n    return _regeneratorRuntime.async(function logUserIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"isLoggedIn\", \"true\"));\n\n          case 3:\n            setIsLoggedIn(true);\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var logUserOut = function logUserOut() {\n    return _regeneratorRuntime.async(function logUserOut$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"isLoggedIn\", \"false\"));\n\n          case 3:\n            setIsLoggedIn(false);\n            _context3.next = 9;\n            break;\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  return loaded && client && !isLoggedIn !== null ? React.createElement(ApolloProvider, {\n    clietn: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(ThemeProvider, {\n    theme: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(NavController, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }))) : React.createElement(AppLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  });\n}","map":{"version":3,"sources":["D:/FinalProject/semicolon-app/App.js"],"names":["React","useState","useEffect","AppLoading","Font","InMemoryCache","Asset","AntDesign","AsyncStorage","persistCache","ApolloClient","ApolloProvider","options","ThemeProvider","styles","NavController","App","loaded","setLoaded","client","setClient","preLoad","loadAsync","font","require","cache","storage","getItem","isLoggedIn","setIsLoggedIn","console","log","logUserIn","setItem","logUserOut"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { Asset } from \"expo-asset\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { persistCache } from \"apollo-cache-persist\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport options from './apollo';\nimport { ThemeProvider } from \"styled-components\";\nimport styles from './styles';\nimport NavController from './components/NavController';\n\nexport default function App() {\n  const [loaded, setLoaded] = useState(false);\n  const [client, setClient] = useState(null);\n  const preLoad = async () => {\n    try {\n\n      await Font.loadAsync({\n        ...AntDesign.font\n      });\n      await Asset.loadAsync([require(\"./assets/logo.png\")])\n      const cache = new InMemoryCache();\n      await persistCache({\n        cache,\n        storage: AsyncStorage,\n      });\n      const client = new ApolloClient({\n        cache,\n        ...options\n      })\n      const isLoggedIn = await AsyncStorage.getItem(\"isLoggedIn\")\n      if (isLoggedIn === null || isLoggedIn === \"false\") {\n        setIsLoggedIn(false)\n      } else {\n        setIsLoggedIn(true)\n      }\n      setLoaded(true);\n      setClient(client);\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  useEffect(() => {\n    preLoad();\n  }, []);\n\n  const logUserIn = async () => {\n    try {\n      await AsyncStorage.setItem(\"isLoggedIn\", \"true\")\n      setIsLoggedIn(true)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  const logUserOut = async () => {\n    try {\n      await AsyncStorage.setItem(\"isLoggedIn\", \"false\")\n      setIsLoggedIn(false)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return loaded && client && !isLoggedIn !== null ? (\n    <ApolloProvider clietn={client}>\n      <ThemeProvider theme={styles}>\n        <NavController />\n      </ThemeProvider>\n    </ApolloProvider>\n  ) :\n    (<AppLoading />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}